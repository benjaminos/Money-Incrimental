<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Money Incremental Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 50px;
        }
        #moneyDisplay {
            font-size: 24px;
            margin: 20px 0;
        }
        #earningsDisplay {
            font-size: 20px; 
            color: green;
            margin: 10px 0; 
        }
        #rebirthCounter, #superRebirthCounter {
            font-size: 20px;
            margin: 5px 0;
        }
        #costContainer {
            display: flex;
            justify-content: center;
            margin: 20px 0;
            font-size: 18px;
            flex-direction: column;
            align-items: center;
        }
        #rebirthCostDisplay, #superRebirthCostDisplay {
            margin: 5px 0;
        }
        #startButton, #upgradesButton, #rebirthButton, #superRebirthButton, #autoBuyAllButton, #superRebirthUpgradesButton {
            margin: 10px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
        #upgradesContainer, #superRebirthUpgradesContainer {
            display: none;
            max-height: 400px;
            overflow-y: auto;
            border: 1px solid #cccccc;
            margin-top: 20px;
            padding: 10px;
        }
    </style>
</head>
<body>
    <h1 id="gameTitle">Money Incremental Game</h1>
    <div id="earningsDisplay">Earnings: $0.00/s</div>
    <div id="moneyDisplay">$0.00</div>

    <div id="rebirthCounter">Rebirths: 0</div>
    <div id="superRebirthCounter">Super Rebirths: 0</div>

    <div id="costContainer">
        <div id="rebirthCostDisplay">Rebirth Cost: $1,000,000</div>
        <div id="superRebirthCostDisplay">Super Rebirth Cost: 5 Rebirths</div>
    </div>

    <button id="startButton">Start Game</button>
    <button id="upgradesButton">Toggle Upgrades</button>
    <button id="rebirthButton" style="display: none;">Rebirth</button>
    <button id="superRebirthButton" style="display: none;">Super Rebirth</button>
    <button id="autoBuyAllButton" style="display: none;">Auto Buy All</button>
    <button id="superRebirthUpgradesButton" style="display: none;">Toggle Super Rebirth Upgrades</button>

    <div id="upgradesContainer">
        <h2>Upgrades</h2>
        <div id="upgradeList"></div>
    </div>

    <div id="superRebirthUpgradesContainer">
        <h2>Super Rebirth Upgrades</h2>
        <div id="superRebirthUpgradeList"></div>
    </div>

    <script>
        let money = 0;
        let earningInterval;
        let totalIncrement = 0; 
        let rebirthCount = 0;
        let superRebirthCount = 0; 
        let rebirthCost = 1000000; 
        let superRebirthRequired = 5; 
        let baseEarningRate = 1; 

        let moneyMultiplier = 1; 

        const moneyDisplay = document.getElementById("moneyDisplay");
        const earningsDisplay = document.getElementById("earningsDisplay");
        const rebirthCounterDisplay = document.getElementById("rebirthCounter");
        const superRebirthCounterDisplay = document.getElementById("superRebirthCounter");
        const rebirthCostDisplay = document.getElementById("rebirthCostDisplay");
        const superRebirthCostDisplay = document.getElementById("superRebirthCostDisplay");
        const startButton = document.getElementById("startButton");
        const upgradesContainer = document.getElementById("upgradesContainer");
        const upgradesButton = document.getElementById("upgradesButton");
        const upgradeList = document.getElementById("upgradeList");
        const rebirthButton = document.getElementById("rebirthButton");
        const superRebirthButton = document.getElementById("superRebirthButton");
        const autoBuyAllButton = document.getElementById("autoBuyAllButton");
        const superRebirthUpgradesButton = document.getElementById("superRebirthUpgradesButton");
        const superRebirthUpgradeList = document.getElementById("superRebirthUpgradeList");

        const upgradeConfig = [
            { name: "First Upgrade", cost: 10 },
            { name: "Second Upgrade", cost: 100 },
            { name: "Third Upgrade", cost: 1000 }
            // Add your existing upgrades here as needed
        ];

        const superRebirthUpgradeConfig = [
            { name: "Double Money", cost: 1 },
            { name: "Quadruple Money", cost: 2 },
            { name: "Octuple Money", cost: 5 }
        ];

        function startGame() {
            startButton.style.display = 'none';
            upgradesButton.style.display = 'block';
            superRebirthUpgradesButton.style.display = 'block';
            autoBuyAllButton.style.display = 'block';

            money = 0;
            totalIncrement = 0;
            rebirthCount = 0;
            superRebirthCount = 0; 
            baseEarningRate = 1; 
            rebirthCost = 1000000; 
            moneyMultiplier = 1; 
            startEarningMoney();
            initializeUpgrades();
            initializeSuperRebirthUpgrades();
            updateRebirthButtonVisibility();
            updateSuperRebirthButtonVisibility();
            updateCostDisplays();
        }

        function startEarningMoney() {
            earningInterval = setInterval(() => {
                let totalEarningsPerSec = (baseEarningRate + totalIncrement) * moneyMultiplier;
                money += totalEarningsPerSec;

                updateMoneyDisplay();
                updateEarningsDisplay(totalEarningsPerSec);
                checkAutomaticUpgrades();
            }, 1000);
        }

        function updateEarningsDisplay(totalEarningsPerSec) {
            earningsDisplay.innerHTML = `Earnings: $${totalEarningsPerSec.toFixed(2)}/s`;
        }

        function initializeUpgrades() {
            upgradeList.innerHTML = '';  // Clear previous upgrade list
            upgradeConfig.forEach(upgrade => createUpgrade(upgrade.name, upgrade.cost));
        }

        function createUpgrade(name, cost) {
            const upgradeDiv = document.createElement("div");
            const upgrade = {
                name: name,
                cost: cost,
                increment: calculateIncrement(cost),
                purchased: 0
            };
            upgradeDiv.innerHTML = `${upgrade.name}: +$${upgrade.increment}/s (Cost: ${upgrade.cost}) 
                <button onclick="buyUpgrade(${upgrade})">Buy</button>`;
            upgradeList.appendChild(upgradeDiv);
        }

        function calculateIncrement(cost) {
            return Math.floor(cost * 0.10); 
        }

        function buyUpgrade(upgrade) {
            if (money >= upgrade.cost) {
                money -= upgrade.cost;
                totalIncrement += upgrade.increment;
                upgrade.purchased += 1;

                upgrade.cost = Math.floor(upgrade.cost * 1.5);  // Increase next cost
                updateMoneyDisplay();
                initializeUpgrades();
            } else {
                alert("Not enough money to buy this upgrade.");
            }

            updateRebirthButtonVisibility();
            updateSuperRebirthButtonVisibility();
        }

        function initializeSuperRebirthUpgrades() {
            superRebirthUpgradeList.innerHTML = '';
            superRebirthUpgradeConfig.forEach((upgrade, index) => {
                const upgradeDiv = document.createElement("div");
                upgradeDiv.className = "superRebirthUpgrade";
                upgradeDiv.innerHTML = `${upgrade.name}: Costs ${upgrade.cost} Super Rebirths 
                                        <button onclick="buySuperRebirthUpgrade(${index})">Buy</button>`;
                superRebirthUpgradeList.appendChild(upgradeDiv);
            });
        }

        function buySuperRebirthUpgrade(index) {
            const upgrade = superRebirthUpgradeConfig[index];
            if (superRebirthCount >= upgrade.cost) {
                superRebirthCount -= upgrade.cost; 
                switch (upgrade.name) {
                    case "Double Money":
                        moneyMultiplier *= 2;
                        break;
                    case "Quadruple Money":
                        moneyMultiplier *= 4;
                        break;
                    case "Octuple Money":
                        moneyMultiplier *= 8;
                        break;
                }
                superRebirthCounterDisplay.innerHTML = `Super Rebirths: ${superRebirthCount}`;
                initializeSuperRebirthUpgrades();
            } else {
                alert("Not enough Super Rebirths to buy this upgrade.");
            }
        }

        upgradesButton.addEventListener("click", () => {
            upgradesContainer.style.display =
                upgradesContainer.style.display === 'none' || upgradesContainer.style.display === '' ?
                'block' :
                'none';
        });

        superRebirthUpgradesButton.addEventListener("click", () => {
            superRebirthUpgradesContainer.style.display =
                superRebirthUpgradesContainer.style.display === 'none' || superRebirthUpgradesContainer.style.display === '' ?
                'block' :
                'none';
        });

        function updateMoneyDisplay() {
            moneyDisplay.innerHTML = formatMoney(money);
            updateRebirthButtonVisibility();
            updateSuperRebirthButtonVisibility();
            updateCostDisplays();
        }

        function formatMoney(value) {
            return '$' + value.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        function updateRebirthButtonVisibility() {
            rebirthButton.style.display = money >= rebirthCost ? 'block' : 'none';
        }

        function updateSuperRebirthButtonVisibility() {
            superRebirthButton.style.display = rebirthCount >= superRebirthRequired ? 'block' : 'none';
        }

        rebirthButton.addEventListener("click", () => {
            rebirthCount++;
            rebirthCounterDisplay.innerHTML = `Rebirths: ${rebirthCount}`;
            money = 0;
            totalIncrement = 0;
            upgrades.forEach(upgrade => upgrade.cost = upgrade.originalCost);
            clearInterval(earningInterval);
            baseEarningRate *= 2; 
            startEarningMoney();
            rebirthCost *= 2; 
            updateCostDisplays(); 
            initializeUpgrades();
        });

        superRebirthButton.addEventListener("click", () => {
            if (rebirthCount >= superRebirthRequired) {
                superRebirthCount++;
                superRebirthCounterDisplay.innerHTML = `Super Rebirths: ${superRebirthCount}`;

                money = 0; 
                totalIncrement = 0; 
                baseEarningRate = 1; 
                moneyMultiplier = 1; 

                upgrades.forEach(upgrade => {
                    upgrade.cost = upgrade.originalCost; 
                    upgrade.purchased = 0; 
                });

                clearInterval(earningInterval);
                rebirthCount = 0; 
                rebirthCounterDisplay.innerHTML = `Rebirths: ${rebirthCount}`;
                superRebirthRequired *= 2; 
                updateCostDisplays(); 
                initializeSuperRebirthUpgrades(); 
                startEarningMoney(); 
            } else {
                alert(`You need ${superRebirthRequired} rebirths to perform a super rebirth.`);
            }
        });

        autoBuyAllButton.addEventListener("click", () => {
            const allAutoBuy = upgrades.every(upgrade => upgrade.autoBuy);
            upgrades.forEach(upgrade => {
                upgrade.autoBuy = !allAutoBuy;
                if (upgrade.autoBuy) {
                    checkAutomaticUpgrades();
                }
            });
            initializeUpgrades();
        });

        function updateCostDisplays() {
            rebirthCostDisplay.innerHTML = `Rebirth Cost: ${formatMoney(rebirthCost)}`;
            superRebirthCostDisplay.innerHTML = `Super Rebirth Cost: ${superRebirthRequired} Rebirths`;
        }

        startButton.addEventListener("click", startGame);
        updateMoneyDisplay();
    </script>
</body>
</html>
